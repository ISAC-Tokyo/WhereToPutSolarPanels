= API part of WhereToPutSolarPanels

== Deployment for development mode
For production: https://github.com/International-Space-Apps-Challenge-Tokyo/WhereToPutSolarPanels/blob/master/README.rst#deployment
  # Install required gems
  bundle install --path=.bundle
  # Start server
  bundle exec rails s

== 関連ファイル
  |-- app
  |   |-- controllers
  |       `-- sunshine_rank_controller.rb   # /rankや/rank/rangeに対応する処理を含むコントローラー
  |   `-- models
  |       |-- cloud.rb                      # 生データであるcloud_maskとの接続用モデル
  |       `-- scale1.rb                     # aggregate.js で処理されたデータ用のモデル
  |                                         # see https://github.com/International-Space-Apps-Challenge-Tokyo/WhereToPutSolarPanels/blob/master/mongo/README.md
  |-- config
  |   |-- mongoid.yml                       # mongodbとの接続設定
  |   `-- routes.rb                         # ルーティングの設定
  `-- log                                   # ログ

== mongodb 接続設定関連
=== mongoid.yml
  development:
    sessions:
      default:                # デフォルトで使用されるDBの設定
        database: wtps12      # db名
        hosts:                # 接続先情報
          - 10.1.2.94:27017
      # 複数のdbやサーバに接続する場合は下記のように追記していく
      dai2:
        database: scale1
        hosts:
          - 10.1.1.82:27017

=== app/models/cloud.rb
  class Cloud
    include Mongoid::Document          # mongoid gemを使ったmongodb用モデル
    store_in collection: "cloud_mask"  # コレクション名

    # 各フィールドの設定
    field :loc, type: Hash
    field :date, :type => Date
    field :score, :type => Integer
    field :low, :type => Integer

    index({ loc: "2d" })               # 地理空間インデックス設定。これがないとnearとか使えない
  end

上記モデルクラスを使ったコントローラーでのアクセス例
  # lat=30, lon=140 付近の取得。デフォルトで最大100個が取得できる。
  Cloud.near(loc:[30, 140])
  
  # 左下と右上のコーナーの座標を指定したデータ取得。
  Cloud.within_box(loc: [[29, 139], [30, 140]])
